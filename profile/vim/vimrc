" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
" runtime! archlinux.vim

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim72/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

" .vimrc
" See: http://vimdoc.sourceforge.net/htmldoc/options.html for details

" Comment below file encoding option due to viewing unmodifiable files
set langmenu=zh_CN.UTF-8
if v:lang =~? '^\(zh\)\|\(ja\)\|\(ko\)'
    set ambiwidth=double
endif
" For multi-byte character support (CJK support, for example):
" UTF-8 and CJK language settings
" set fenc=cp936 
set encoding=utf-8
set nobomb
set fileencodings=ucs-bom,utf-8,cp936,big5,euc-jp,euc-kr,gb18030,latin1

set nocompatible    " Use Vim settings, rather than Vi settings (much better!).
                    " This mush be first, because it changes other options as
                    " a side effect
set history=100     " Keep 100 line of command line history
set tabstop=4       " Number of spaces that a <Tab> in the file counts for.
 
set shiftwidth=4    " Number of spaces to use for each step of (auto)indent.
 
set expandtab       " Use the appropriate number of spaces to insert a <Tab>.
                    " Spaces are used in indents with the '>' and '<' commands
                    " and when 'autoindent' is on. To insert a real tab when
                    " 'expandtab' is on, use CTRL-V <Tab>.
 
set smarttab        " When on, a <Tab> in front of a line inserts blanks
                    " according to 'shiftwidth'. 'tabstop' is used in other
                    " places. A <BS> will delete a 'shiftwidth' worth of space
                    " at the start of the line.
 
set showcmd         " Show (partial) command in status line.
set showmode

set number          " Show line numbers.
set colorcolumn=80
set showmatch       " When a bracket is inserted, briefly jump to the matching
                    " one. The jump is only done if the match can be seen on the
                    " screen. The time to show the match can be set with
                    " 'matchtime'.
 
set hlsearch        " When there is a previous search pattern, highlight all
                    " its matches.
 
set incsearch       " While typing a search command, show immediately where the
                    " so far typed pattern matches.
 
set ignorecase      " Ignore case in search patterns.
 
set smartcase       " Override the 'ignorecase' option if the search pattern
                    " contains upper case characters.

set backspace=indent,eol,start " Allow backspacing over everything 
                    " in insert mode
set backspace=2     " Influences the working of <BS>, <Del>, CTRL-W
                    " and CTRL-U in Insert mode. This is a list of items,
                    " separated by commas. Each item allows a way to backspace
                    " over something.
 
set autoindent      " Copy indent from current line when starting a new line
                    " (typing <CR> in Insert mode or when using the "o" or "O"
                    " command).
set smartindent    
 
set textwidth=79    " Maximum width of text that is being inserted. A longer
                    " line will be broken after white space to get this width.
 
set formatoptions=c,q,r,t " This is a sequence of letters which describes how
                    " automatic formatting is to be done.
                    "
                    " letter    meaning when present in 'formatoptions'
                    " ------    ---------------------------------------
                    " c         Auto-wrap comments using textwidth, inserting
                    "           the current comment leader automatically.
                    " q         Allow formatting of comments with "gq".
                    " r         Automatically insert the current comment leader
                    "           after hitting <Enter> in Insert mode. 
                    " t         Auto-wrap text using textwidth (does not apply
                    "           to comments)
 
set ruler           " Show the line and column number of the cursor position,
                    " separated by a comma.
 
set background=dark " When set to "dark", Vim will try to use colors that look
                    " good on a dark background. When set to "light", Vim will
                    " try to use colors that look good on a light background.
                    " Any other value is illegal.
 
"set mouse-=a         " Enable the use of the mouse.
if has('mouse')
  set mouse=v       " Enable the use of the mouse, copy and paste is enable
endif

" Added administrator
" take a reference to archlinux official wiki
set backupdir=~/.vim/backup,/tmp
"set noswapdile
set wrapscan
"diable spell check because in coding, spell check is anoying
"set spell
" command mode
set wildmenu
" [INVALID] set wildmode=list:longesti,full
" statusline
set statusline=%<%f\ %y%h%m%r\ PWD:%{getcwd()}%=%-14.(%l,%c%V%)\ %P
set laststatus=2

if &term == "rxvt-unicode-256color"
  set t_Co=256
  colorscheme torte
elseif (&term == "xterm" || &term == "screen" || &term == "screen-256color" || &term == "xterm-256color")
  set t_Co=256
  colorscheme torte
else
  set t_Co=8
  colorscheme torte
endif

syntax on

" Powerline
"python from powerline.vim import setup as powerline_setup
"python powerline_setup()
"python del powerline_setup
" Always show statusline
"set laststatus=2

" Vundle plugin manager
" filetype off required by Vundle
filetype off
" set the runtime path to include Vundle and initialize
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" Activating local plugins
" let Vundle manage Vundle, required
"Plugin 'file:///home/<username>/.vim/bundle/Vundle.vim'

" Vue support
"Plugin 'posva/vim-vue'

" rust support
"Plugin 'file:///home/<username>/.vim/bundle/rust'

" lucius coloscheme
"Plugin 'file:///home/<username>/.vim/bundle/vim-lucius'

" tabular
"Plugin 'file:///home/<username>/.vim/bundle/tabular'

" coffeescript
"Plugin 'file:///home/<username>/.vim/bundle/vim-coffee-script'

" vim-racket
"Plugin 'file:///home/<username>/.vim/bundle/vim-racket'

" vim-markdown
"Plugin 'file:///home/<username>/.vim/bundle/vim-markdown'

" vim-less
"Plugin 'file:///home/<username>/.vim/bundle/vim-less'

" vim-javascript
"Plugin 'file:///home/<username>/.vim/bundle/vim-javascript'

" vim-jade
"Plugin 'file:///home/<username>/.vim/bundle/vim-jade'

" salt-vim
"Plugin 'file:///home/<username>/.vim/bundle/salt-vim'

" indentLine
"Plugin 'file:///home/<username>/.vim/bundle/indentLine'

" powerline status
"Plugin 'file:///home/<username>/.vim/bundle/powerline', {'rtp': 'powerline/bindings/vim/'}

" airline
"Plugin 'file:///home/<username>/.vim/bundle/vim-airline'

" YCM
"Plugin 'Valloric/YouCompleteMe'

" All of your Plugins must be added before the following line
"call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" airline config
let g:airline#extensions#tabline#enabled = 1

" Vim Tabs Key Bindings
nnoremap <C-t><up> :tabr<cr>
nnoremap <C-t><down> :tabl<cr>
nnoremap <C-t><left> :tabp<cr>
nnoremap <C-t><right> :tabn<cr>
nnoremap <F5> :previous<cr>
nnoremap <F6> :next<cr>
nnoremap <F7> :tabprevious<cr>
nnoremap <F8> :tabnext<cr>
nnoremap <CR> :nohlsearch<cr>

" Basic programming language configure
" Python
autocmd FileType python setlocal shiftwidth=4 softtabstop=4 
autocmd FileType python setlocal completeopt=preview
autocmd FileType python setlocal foldmethod=indent
autocmd FileType python setlocal colorcolumn=100
autocmd FileType python setlocal textwidth=99
autocmd FileType python nmap <buffer> <F9> :!python2 %<CR>
"autocmd FileType python nmap <buffer> <F9> :!python3 %<CR>

" PKGBUILD
autocmd FileType PKGBUILD setlocal shiftwidth=4 softtabstop=4 

" sh
autocmd FileType sh setlocal shiftwidth=4 softtabstop=4 

" LaTeX
autocmd Filetype tex,latex setlocal grepprg=grep\ -nH\ $

" HTML
autocmd FileType html setlocal tabstop=2
autocmd FileType html setlocal shiftwidth=2
autocmd FileType html setlocal foldmethod=indent
autocmd FileType html inoremap {{ {{<Space><Space>}}<Left><Left>
autocmd FileType html inoremap {% {%<Space><Space>%}<Left><Left>
"autocmd FileType html setlocal noexpandtab

" XHTML, depreciated
autocmd FileType xhtml setlocal shiftwidth=2
autocmd FileType xhtml setlocal tabstop=2
autocmd FileType xhtml setlocal foldmethod=indent
autocmd FileType xhtml inoremap {{ {{<Space><Space><Space><Space>}}<Left><Left><Left><Left>
autocmd FileType xhtml inoremap {% {%<Space><Space><Space><Space>%}<Left><Left><Left><Left>

" HTML, django template
autocmd FileType htmldjango setlocal tabstop=2
autocmd FileType htmldjango setlocal shiftwidth=2
autocmd FileType htmldjango setlocal foldmethod=indent
autocmd FileType htmldjango inoremap {{ {{<Space><Space>}}<Left><Left>
autocmd FileType htmldjango inoremap {% {%<Space><Space>%}<Left><Left>
" autocmd FileType htmldjango setlocal noexpandtab

" txtfmt enable
autocmd BufRead,BufNewFile *.txtfmt setlocal filetype=txtfmt

" C
autocmd FileType c inoremap ( ()<Left>
autocmd FileType c inoremap { {}<Left>
autocmd Filetype c inoremap [ []<Left>
autocmd FileType c inoremap " ""<Left>
autocmd FileType c inoremap /* /*<Space><Space>*/<Left><Left><Left>

" Common Lisp
autocmd FileType lisp setlocal tabstop=2
autocmd FileType lisp setlocal shiftwidth=2
autocmd FileType lisp inoremap ( ()<Left>
autocmd FileType lisp inoremap [ []<Left>
autocmd FileType lisp inoremap " ""<Left>

" Scheme
autocmd FileType scheme inoremap ( ()<Left>
autocmd FileType scheme inoremap [ []<Left>
autocmd FileType scheme inoremap " ""<Left>

" Racket
autocmd FileType racket setlocal tabstop=2
autocmd FileType racket setlocal shiftwidth=2
autocmd FileType racket setlocal foldmethod=indent
autocmd FileType racket setlocal colorcolumn=100
autocmd FileType racket setlocal textwidth=99
autocmd FileType racket inoremap ( ()<Left>
autocmd FileType racket inoremap [ []<Left>
autocmd FileType racket inoremap { {}<Left>
autocmd FileType racket inoremap " ""<Left>
autocmd Filetype racket nmap <buffer> <F9> :!racket %<CR>

" Javascript ES5
autocmd FileType javascript setlocal tabstop=4
autocmd FileType javascript setlocal shiftwidth=4
autocmd FileType javascript setlocal foldmethod=indent
autocmd FileType javascript setlocal colorcolumn=119
autocmd FileType javascript setlocal textwidth=119
autocmd FileType javascript inoremap ( ()<Left>
autocmd FileType javascript inoremap { {}<Left>
autocmd Filetype javascript inoremap [ []<Left>
autocmd FileType javascript inoremap " ""<Left>
autocmd FileType javascript inoremap ' ''<Left>

" ECMAScript/Javascript ES2015/2016/2017/2018/2019/2020
autocmd BufRead,BufNewFile *.es setlocal filetype=javascript
autocmd BufRead,BufNewFile *.es6 setlocal filetype=javascript
autocmd BufRead,BufNewFile *.es7 setlocal filetype=javascript

" Coffeescript
autocmd FileType coffee setlocal foldmethod=indent
autocmd FileType coffee setlocal tabstop=2
autocmd FileType coffee setlocal shiftwidth=2
autocmd FileType coffee setlocal colorcolumn=100
autocmd FileType coffee setlocal textwidth=99
autocmd FileType coffee inoremap ' ''<Left>
autocmd FileType coffee inoremap " ""<Left>
autocmd FileType coffee inoremap [ []<Left>
autocmd FileType coffee inoremap ( ()<Left>
autocmd FileType coffee inoremap { {}<Left>

" Rust
autocmd FileType rust setlocal tabstop=2
autocmd FileType rust setlocal shiftwidth=2
autocmd FileType rust setlocal colorcolumn=100
autocmd FileType rust setlocal textwidth=99
autocmd FileType rust inoremap ( ()<Left>
autocmd FileType rust inoremap { {}<Left>
autocmd Filetype rust inoremap [ []<Left>
autocmd FileType rust inoremap " ""<Left>
autocmd FileType rust inoremap ' ''<Left>

" Markdown
autocmd FileType markdown setlocal tabstop=2
autocmd FileType markdown setlocal shiftwidth=2
autocmd FileType markdown setlocal colorcolumn=100
autocmd FileType markdown setlocal textwidth=99
autocmd FileType markdown inoremap ( ()<Left>
autocmd FileType markdown inoremap { {}<Left>
autocmd Filetype markdown inoremap [ []<Left>
autocmd FileType markdown inoremap " ""<Left>
autocmd FileType markdown inoremap ' ''<Left>

"Ubuntu terminal bracket highlight fix
highlight MatchParen cterm=bold ctermbg=grey ctermfg=white
